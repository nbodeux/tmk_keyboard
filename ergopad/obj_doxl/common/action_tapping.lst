   1               		.file	"action_tapping.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.debug_waiting_buffer,"ax",@progbits
  12               	debug_waiting_buffer:
  13               	.LFB11:
  14               		.file 1 "../../tmk_core/common/action_tapping.c"
   1:../../tmk_core/common/action_tapping.c **** #include <stdint.h>
   2:../../tmk_core/common/action_tapping.c **** #include <stdbool.h>
   3:../../tmk_core/common/action_tapping.c **** #include "action.h"
   4:../../tmk_core/common/action_tapping.c **** #include "action_layer.h"
   5:../../tmk_core/common/action_tapping.c **** #include "action_tapping.h"
   6:../../tmk_core/common/action_tapping.c **** #include "keycode.h"
   7:../../tmk_core/common/action_tapping.c **** #include "timer.h"
   8:../../tmk_core/common/action_tapping.c **** 
   9:../../tmk_core/common/action_tapping.c **** #ifdef DEBUG_ACTION
  10:../../tmk_core/common/action_tapping.c **** #include "debug.h"
  11:../../tmk_core/common/action_tapping.c **** #else
  12:../../tmk_core/common/action_tapping.c **** #include "nodebug.h"
  13:../../tmk_core/common/action_tapping.c **** #endif
  14:../../tmk_core/common/action_tapping.c **** 
  15:../../tmk_core/common/action_tapping.c **** #ifndef NO_ACTION_TAPPING
  16:../../tmk_core/common/action_tapping.c **** 
  17:../../tmk_core/common/action_tapping.c **** #define IS_TAPPING()            !IS_NOEVENT(tapping_key.event)
  18:../../tmk_core/common/action_tapping.c **** #define IS_TAPPING_PRESSED()    (IS_TAPPING() && tapping_key.event.pressed)
  19:../../tmk_core/common/action_tapping.c **** #define IS_TAPPING_RELEASED()   (IS_TAPPING() && !tapping_key.event.pressed)
  20:../../tmk_core/common/action_tapping.c **** #define IS_TAPPING_KEY(k)       (IS_TAPPING() && KEYEQ(tapping_key.event.key, (k)))
  21:../../tmk_core/common/action_tapping.c **** #define WITHIN_TAPPING_TERM(e)  (TIMER_DIFF_16(e.time, tapping_key.event.time) < TAPPING_TERM)
  22:../../tmk_core/common/action_tapping.c **** 
  23:../../tmk_core/common/action_tapping.c **** 
  24:../../tmk_core/common/action_tapping.c **** static keyrecord_t tapping_key = {};
  25:../../tmk_core/common/action_tapping.c **** static keyrecord_t waiting_buffer[WAITING_BUFFER_SIZE] = {};
  26:../../tmk_core/common/action_tapping.c **** static uint8_t waiting_buffer_head = 0;
  27:../../tmk_core/common/action_tapping.c **** static uint8_t waiting_buffer_tail = 0;
  28:../../tmk_core/common/action_tapping.c **** 
  29:../../tmk_core/common/action_tapping.c **** static bool process_tapping(keyrecord_t *record);
  30:../../tmk_core/common/action_tapping.c **** static bool waiting_buffer_enq(keyrecord_t record);
  31:../../tmk_core/common/action_tapping.c **** static void waiting_buffer_clear(void);
  32:../../tmk_core/common/action_tapping.c **** static bool waiting_buffer_typed(keyevent_t event);
  33:../../tmk_core/common/action_tapping.c **** static void waiting_buffer_scan_tap(void);
  34:../../tmk_core/common/action_tapping.c **** static void debug_tapping_key(void);
  35:../../tmk_core/common/action_tapping.c **** static void debug_waiting_buffer(void);
  36:../../tmk_core/common/action_tapping.c **** 
  37:../../tmk_core/common/action_tapping.c **** 
  38:../../tmk_core/common/action_tapping.c **** void action_tapping_process(keyrecord_t record)
  39:../../tmk_core/common/action_tapping.c **** {
  40:../../tmk_core/common/action_tapping.c ****     if (process_tapping(&record)) {
  41:../../tmk_core/common/action_tapping.c ****         if (!IS_NOEVENT(record.event)) {
  42:../../tmk_core/common/action_tapping.c ****             debug("processed: "); debug_record(record); debug("\n");
  43:../../tmk_core/common/action_tapping.c ****         }
  44:../../tmk_core/common/action_tapping.c ****     } else {
  45:../../tmk_core/common/action_tapping.c ****         if (!waiting_buffer_enq(record)) {
  46:../../tmk_core/common/action_tapping.c ****             // clear all in case of overflow.
  47:../../tmk_core/common/action_tapping.c ****             debug("OVERFLOW: CLEAR ALL STATES\n");
  48:../../tmk_core/common/action_tapping.c ****             clear_keyboard();
  49:../../tmk_core/common/action_tapping.c ****             waiting_buffer_clear();
  50:../../tmk_core/common/action_tapping.c ****             tapping_key = (keyrecord_t){};
  51:../../tmk_core/common/action_tapping.c ****         }
  52:../../tmk_core/common/action_tapping.c ****     }
  53:../../tmk_core/common/action_tapping.c **** 
  54:../../tmk_core/common/action_tapping.c ****     // process waiting_buffer
  55:../../tmk_core/common/action_tapping.c ****     if (!IS_NOEVENT(record.event) && waiting_buffer_head != waiting_buffer_tail) {
  56:../../tmk_core/common/action_tapping.c ****         debug("---- action_exec: process waiting_buffer -----\n");
  57:../../tmk_core/common/action_tapping.c ****     }
  58:../../tmk_core/common/action_tapping.c ****     for (; waiting_buffer_tail != waiting_buffer_head; waiting_buffer_tail = (waiting_buffer_tail +
  59:../../tmk_core/common/action_tapping.c ****         if (process_tapping(&waiting_buffer[waiting_buffer_tail])) {
  60:../../tmk_core/common/action_tapping.c ****             debug("processed: waiting_buffer["); debug_dec(waiting_buffer_tail); debug("] = ");
  61:../../tmk_core/common/action_tapping.c ****             debug_record(waiting_buffer[waiting_buffer_tail]); debug("\n\n");
  62:../../tmk_core/common/action_tapping.c ****         } else {
  63:../../tmk_core/common/action_tapping.c ****             break;
  64:../../tmk_core/common/action_tapping.c ****         }
  65:../../tmk_core/common/action_tapping.c ****     }
  66:../../tmk_core/common/action_tapping.c ****     if (!IS_NOEVENT(record.event)) {
  67:../../tmk_core/common/action_tapping.c ****         debug("\n");
  68:../../tmk_core/common/action_tapping.c ****     }
  69:../../tmk_core/common/action_tapping.c **** }
  70:../../tmk_core/common/action_tapping.c **** 
  71:../../tmk_core/common/action_tapping.c **** 
  72:../../tmk_core/common/action_tapping.c **** /* Tapping
  73:../../tmk_core/common/action_tapping.c ****  *
  74:../../tmk_core/common/action_tapping.c ****  * Rule: Tap key is typed(pressed and released) within TAPPING_TERM.
  75:../../tmk_core/common/action_tapping.c ****  *       (without interfering by typing other key)
  76:../../tmk_core/common/action_tapping.c ****  */
  77:../../tmk_core/common/action_tapping.c **** /* return true when key event is processed or consumed. */
  78:../../tmk_core/common/action_tapping.c **** bool process_tapping(keyrecord_t *keyp)
  79:../../tmk_core/common/action_tapping.c **** {
  80:../../tmk_core/common/action_tapping.c ****     keyevent_t event = keyp->event;
  81:../../tmk_core/common/action_tapping.c **** 
  82:../../tmk_core/common/action_tapping.c ****     // if tapping
  83:../../tmk_core/common/action_tapping.c ****     if (IS_TAPPING_PRESSED()) {
  84:../../tmk_core/common/action_tapping.c ****         if (WITHIN_TAPPING_TERM(event)) {
  85:../../tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
  86:../../tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key) && !event.pressed) {
  87:../../tmk_core/common/action_tapping.c ****                     // first tap!
  88:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: First tap(0->1).\n");
  89:../../tmk_core/common/action_tapping.c ****                     tapping_key.tap.count = 1;
  90:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
  91:../../tmk_core/common/action_tapping.c ****                     process_action(&tapping_key);
  92:../../tmk_core/common/action_tapping.c **** 
  93:../../tmk_core/common/action_tapping.c ****                     // copy tapping state
  94:../../tmk_core/common/action_tapping.c ****                     keyp->tap = tapping_key.tap;
  95:../../tmk_core/common/action_tapping.c ****                     // enqueue
  96:../../tmk_core/common/action_tapping.c ****                     return false;
  97:../../tmk_core/common/action_tapping.c ****                 }
  98:../../tmk_core/common/action_tapping.c **** #if TAPPING_TERM >= 500
  99:../../tmk_core/common/action_tapping.c ****                 /* Process a key typed within TAPPING_TERM
 100:../../tmk_core/common/action_tapping.c ****                  * This can register the key before settlement of tapping,
 101:../../tmk_core/common/action_tapping.c ****                  * useful for long TAPPING_TERM but may prevent fast typing.
 102:../../tmk_core/common/action_tapping.c ****                  */
 103:../../tmk_core/common/action_tapping.c ****                 else if (IS_RELEASED(event) && waiting_buffer_typed(event)) {
 104:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: End. No tap. Interfered by typing key\n");
 105:../../tmk_core/common/action_tapping.c ****                     process_action(&tapping_key);
 106:../../tmk_core/common/action_tapping.c ****                     tapping_key = (keyrecord_t){};
 107:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 108:../../tmk_core/common/action_tapping.c ****                     // enqueue
 109:../../tmk_core/common/action_tapping.c ****                     return false;
 110:../../tmk_core/common/action_tapping.c ****                 }
 111:../../tmk_core/common/action_tapping.c **** #endif
 112:../../tmk_core/common/action_tapping.c ****                 /* Process release event of a key pressed before tapping starts
 113:../../tmk_core/common/action_tapping.c ****                  * Without this unexpected repeating will occur with having fast repeating setting
 114:../../tmk_core/common/action_tapping.c ****                  * https://github.com/tmk/tmk_keyboard/issues/60
 115:../../tmk_core/common/action_tapping.c ****                  */
 116:../../tmk_core/common/action_tapping.c ****                 else if (IS_RELEASED(event) && !waiting_buffer_typed(event)) {
 117:../../tmk_core/common/action_tapping.c ****                     // Modifier should be retained till end of this tapping.
 118:../../tmk_core/common/action_tapping.c ****                     action_t action = layer_switch_get_action(event);
 119:../../tmk_core/common/action_tapping.c ****                     switch (action.kind.id) {
 120:../../tmk_core/common/action_tapping.c ****                         case ACT_LMODS:
 121:../../tmk_core/common/action_tapping.c ****                         case ACT_RMODS:
 122:../../tmk_core/common/action_tapping.c ****                             if (action.key.mods && !action.key.code) return false;
 123:../../tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 124:../../tmk_core/common/action_tapping.c ****                             break;
 125:../../tmk_core/common/action_tapping.c ****                         case ACT_LMODS_TAP:
 126:../../tmk_core/common/action_tapping.c ****                         case ACT_RMODS_TAP:
 127:../../tmk_core/common/action_tapping.c ****                             if (action.key.mods && keyp->tap.count == 0) return false;
 128:../../tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 129:../../tmk_core/common/action_tapping.c ****                             break;
 130:../../tmk_core/common/action_tapping.c ****                     }
 131:../../tmk_core/common/action_tapping.c ****                     // Release of key should be process immediately.
 132:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: release event of a key pressed before tapping\n");
 133:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 134:../../tmk_core/common/action_tapping.c ****                     return true;
 135:../../tmk_core/common/action_tapping.c ****                 }
 136:../../tmk_core/common/action_tapping.c ****                 else {
 137:../../tmk_core/common/action_tapping.c ****                     // set interrupted flag when other key preesed during tapping
 138:../../tmk_core/common/action_tapping.c ****                     if (event.pressed) {
 139:../../tmk_core/common/action_tapping.c ****                         tapping_key.tap.interrupted = true;
 140:../../tmk_core/common/action_tapping.c ****                     }
 141:../../tmk_core/common/action_tapping.c ****                     // enqueue 
 142:../../tmk_core/common/action_tapping.c ****                     return false;
 143:../../tmk_core/common/action_tapping.c ****                 }
 144:../../tmk_core/common/action_tapping.c ****             }
 145:../../tmk_core/common/action_tapping.c ****             // tap_count > 0
 146:../../tmk_core/common/action_tapping.c ****             else {
 147:../../tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key) && !event.pressed) {
 148:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: Tap release("); debug_dec(tapping_key.tap.count); debug(")\n");
 149:../../tmk_core/common/action_tapping.c ****                     keyp->tap = tapping_key.tap;
 150:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 151:../../tmk_core/common/action_tapping.c ****                     tapping_key = *keyp;
 152:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 153:../../tmk_core/common/action_tapping.c ****                     return true;
 154:../../tmk_core/common/action_tapping.c ****                 }
 155:../../tmk_core/common/action_tapping.c ****                 else if (is_tap_key(event) && event.pressed) {
 156:../../tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 157:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Start new tap with releasing last tap(>1).\n");
 158:../../tmk_core/common/action_tapping.c ****                         // unregister key
 159:../../tmk_core/common/action_tapping.c ****                         process_action(&(keyrecord_t){
 160:../../tmk_core/common/action_tapping.c ****                                 .tap = tapping_key.tap,
 161:../../tmk_core/common/action_tapping.c ****                                 .event.key = tapping_key.event.key,
 162:../../tmk_core/common/action_tapping.c ****                                 .event.time = event.time,
 163:../../tmk_core/common/action_tapping.c ****                                 .event.pressed = false
 164:../../tmk_core/common/action_tapping.c ****                         });
 165:../../tmk_core/common/action_tapping.c ****                     } else {
 166:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Start while last tap(1).\n");
 167:../../tmk_core/common/action_tapping.c ****                     }
 168:../../tmk_core/common/action_tapping.c ****                     tapping_key = *keyp;
 169:../../tmk_core/common/action_tapping.c ****                     waiting_buffer_scan_tap();
 170:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 171:../../tmk_core/common/action_tapping.c ****                     return true;
 172:../../tmk_core/common/action_tapping.c ****                 }
 173:../../tmk_core/common/action_tapping.c ****                 else {
 174:../../tmk_core/common/action_tapping.c ****                     if (!IS_NOEVENT(event)) {
 175:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: key event while last tap(>0).\n");
 176:../../tmk_core/common/action_tapping.c ****                     }
 177:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 178:../../tmk_core/common/action_tapping.c ****                     return true;
 179:../../tmk_core/common/action_tapping.c ****                 }
 180:../../tmk_core/common/action_tapping.c ****             }
 181:../../tmk_core/common/action_tapping.c ****         }
 182:../../tmk_core/common/action_tapping.c ****         // after TAPPING_TERM
 183:../../tmk_core/common/action_tapping.c ****         else {
 184:../../tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
 185:../../tmk_core/common/action_tapping.c ****                 debug("Tapping: End. Timeout. Not tap(0): ");
 186:../../tmk_core/common/action_tapping.c ****                 debug_event(event); debug("\n");
 187:../../tmk_core/common/action_tapping.c ****                 process_action(&tapping_key);
 188:../../tmk_core/common/action_tapping.c ****                 tapping_key = (keyrecord_t){};
 189:../../tmk_core/common/action_tapping.c ****                 debug_tapping_key();
 190:../../tmk_core/common/action_tapping.c ****                 return false;
 191:../../tmk_core/common/action_tapping.c ****             }  else {
 192:../../tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key) && !event.pressed) {
 193:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: End. last timeout tap release(>0).");
 194:../../tmk_core/common/action_tapping.c ****                     keyp->tap = tapping_key.tap;
 195:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 196:../../tmk_core/common/action_tapping.c ****                     tapping_key = (keyrecord_t){};
 197:../../tmk_core/common/action_tapping.c ****                     return true;
 198:../../tmk_core/common/action_tapping.c ****                 }
 199:../../tmk_core/common/action_tapping.c ****                 else if (is_tap_key(event) && event.pressed) {
 200:../../tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 201:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Start new tap with releasing last timeout tap(>1).\n");
 202:../../tmk_core/common/action_tapping.c ****                         // unregister key
 203:../../tmk_core/common/action_tapping.c ****                         process_action(&(keyrecord_t){
 204:../../tmk_core/common/action_tapping.c ****                                 .tap = tapping_key.tap,
 205:../../tmk_core/common/action_tapping.c ****                                 .event.key = tapping_key.event.key,
 206:../../tmk_core/common/action_tapping.c ****                                 .event.time = event.time,
 207:../../tmk_core/common/action_tapping.c ****                                 .event.pressed = false
 208:../../tmk_core/common/action_tapping.c ****                         });
 209:../../tmk_core/common/action_tapping.c ****                     } else {
 210:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Start while last timeout tap(1).\n");
 211:../../tmk_core/common/action_tapping.c ****                     }
 212:../../tmk_core/common/action_tapping.c ****                     tapping_key = *keyp;
 213:../../tmk_core/common/action_tapping.c ****                     waiting_buffer_scan_tap();
 214:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 215:../../tmk_core/common/action_tapping.c ****                     return true;
 216:../../tmk_core/common/action_tapping.c ****                 }
 217:../../tmk_core/common/action_tapping.c ****                 else {
 218:../../tmk_core/common/action_tapping.c ****                     if (!IS_NOEVENT(event)) {
 219:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: key event while last timeout tap(>0).\n");
 220:../../tmk_core/common/action_tapping.c ****                     }
 221:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 222:../../tmk_core/common/action_tapping.c ****                     return true;
 223:../../tmk_core/common/action_tapping.c ****                 }
 224:../../tmk_core/common/action_tapping.c ****             }
 225:../../tmk_core/common/action_tapping.c ****         }
 226:../../tmk_core/common/action_tapping.c ****     } else if (IS_TAPPING_RELEASED()) {
 227:../../tmk_core/common/action_tapping.c ****         if (WITHIN_TAPPING_TERM(event)) {
 228:../../tmk_core/common/action_tapping.c ****             if (event.pressed) {
 229:../../tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key)) {
 230:../../tmk_core/common/action_tapping.c ****                     if (!tapping_key.tap.interrupted && tapping_key.tap.count > 0) {
 231:../../tmk_core/common/action_tapping.c ****                         // sequential tap.
 232:../../tmk_core/common/action_tapping.c ****                         keyp->tap = tapping_key.tap;
 233:../../tmk_core/common/action_tapping.c ****                         if (keyp->tap.count < 15) keyp->tap.count += 1;
 234:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Tap press("); debug_dec(keyp->tap.count); debug(")\n");
 235:../../tmk_core/common/action_tapping.c ****                         process_action(keyp);
 236:../../tmk_core/common/action_tapping.c ****                         tapping_key = *keyp;
 237:../../tmk_core/common/action_tapping.c ****                         debug_tapping_key();
 238:../../tmk_core/common/action_tapping.c ****                         return true;
 239:../../tmk_core/common/action_tapping.c ****                     } else {
 240:../../tmk_core/common/action_tapping.c ****                         // FIX: start new tap again
 241:../../tmk_core/common/action_tapping.c ****                         tapping_key = *keyp;
 242:../../tmk_core/common/action_tapping.c ****                         return true;
 243:../../tmk_core/common/action_tapping.c ****                     }
 244:../../tmk_core/common/action_tapping.c ****                 } else if (is_tap_key(event)) {
 245:../../tmk_core/common/action_tapping.c ****                     // Sequential tap can be interfered with other tap key.
 246:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: Start with interfering other tap.\n");
 247:../../tmk_core/common/action_tapping.c ****                     tapping_key = *keyp;
 248:../../tmk_core/common/action_tapping.c ****                     waiting_buffer_scan_tap();
 249:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 250:../../tmk_core/common/action_tapping.c ****                     return true;
 251:../../tmk_core/common/action_tapping.c ****                 } else {
 252:../../tmk_core/common/action_tapping.c ****                     // should none in buffer
 253:../../tmk_core/common/action_tapping.c ****                     // FIX: interrupted when other key is pressed
 254:../../tmk_core/common/action_tapping.c ****                     tapping_key.tap.interrupted = true;
 255:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 256:../../tmk_core/common/action_tapping.c ****                     return true;
 257:../../tmk_core/common/action_tapping.c ****                 }
 258:../../tmk_core/common/action_tapping.c ****             } else {
 259:../../tmk_core/common/action_tapping.c ****                 if (!IS_NOEVENT(event)) debug("Tapping: other key just after tap.\n");
 260:../../tmk_core/common/action_tapping.c ****                 process_action(keyp);
 261:../../tmk_core/common/action_tapping.c ****                 return true;
 262:../../tmk_core/common/action_tapping.c ****             }
 263:../../tmk_core/common/action_tapping.c ****         } else {
 264:../../tmk_core/common/action_tapping.c ****             // FIX: process_aciton here?
 265:../../tmk_core/common/action_tapping.c ****             // timeout. no sequential tap.
 266:../../tmk_core/common/action_tapping.c ****             debug("Tapping: End(Timeout after releasing last tap): ");
 267:../../tmk_core/common/action_tapping.c ****             debug_event(event); debug("\n");
 268:../../tmk_core/common/action_tapping.c ****             tapping_key = (keyrecord_t){};
 269:../../tmk_core/common/action_tapping.c ****             debug_tapping_key();
 270:../../tmk_core/common/action_tapping.c ****             return false;
 271:../../tmk_core/common/action_tapping.c ****         }
 272:../../tmk_core/common/action_tapping.c ****     }
 273:../../tmk_core/common/action_tapping.c ****     // not tapping state
 274:../../tmk_core/common/action_tapping.c ****     else {
 275:../../tmk_core/common/action_tapping.c ****         if (event.pressed && is_tap_key(event)) {
 276:../../tmk_core/common/action_tapping.c ****             debug("Tapping: Start(Press tap key).\n");
 277:../../tmk_core/common/action_tapping.c ****             tapping_key = *keyp;
 278:../../tmk_core/common/action_tapping.c ****             waiting_buffer_scan_tap();
 279:../../tmk_core/common/action_tapping.c ****             debug_tapping_key();
 280:../../tmk_core/common/action_tapping.c ****             return true;
 281:../../tmk_core/common/action_tapping.c ****         } else {
 282:../../tmk_core/common/action_tapping.c ****             process_action(keyp);
 283:../../tmk_core/common/action_tapping.c ****             return true;
 284:../../tmk_core/common/action_tapping.c ****         }
 285:../../tmk_core/common/action_tapping.c ****     }
 286:../../tmk_core/common/action_tapping.c **** }
 287:../../tmk_core/common/action_tapping.c **** 
 288:../../tmk_core/common/action_tapping.c **** 
 289:../../tmk_core/common/action_tapping.c **** /*
 290:../../tmk_core/common/action_tapping.c ****  * Waiting buffer
 291:../../tmk_core/common/action_tapping.c ****  */
 292:../../tmk_core/common/action_tapping.c **** bool waiting_buffer_enq(keyrecord_t record)
 293:../../tmk_core/common/action_tapping.c **** {
 294:../../tmk_core/common/action_tapping.c ****     if (IS_NOEVENT(record.event)) {
 295:../../tmk_core/common/action_tapping.c ****         return true;
 296:../../tmk_core/common/action_tapping.c ****     }
 297:../../tmk_core/common/action_tapping.c **** 
 298:../../tmk_core/common/action_tapping.c ****     if ((waiting_buffer_head + 1) % WAITING_BUFFER_SIZE == waiting_buffer_tail) {
 299:../../tmk_core/common/action_tapping.c ****         debug("waiting_buffer_enq: Over flow.\n");
 300:../../tmk_core/common/action_tapping.c ****         return false;
 301:../../tmk_core/common/action_tapping.c ****     }
 302:../../tmk_core/common/action_tapping.c **** 
 303:../../tmk_core/common/action_tapping.c ****     waiting_buffer[waiting_buffer_head] = record;
 304:../../tmk_core/common/action_tapping.c ****     waiting_buffer_head = (waiting_buffer_head + 1) % WAITING_BUFFER_SIZE;
 305:../../tmk_core/common/action_tapping.c **** 
 306:../../tmk_core/common/action_tapping.c ****     debug("waiting_buffer_enq: "); debug_waiting_buffer();
 307:../../tmk_core/common/action_tapping.c ****     return true;
 308:../../tmk_core/common/action_tapping.c **** }
 309:../../tmk_core/common/action_tapping.c **** 
 310:../../tmk_core/common/action_tapping.c **** void waiting_buffer_clear(void)
 311:../../tmk_core/common/action_tapping.c **** {
 312:../../tmk_core/common/action_tapping.c ****     waiting_buffer_head = 0;
 313:../../tmk_core/common/action_tapping.c ****     waiting_buffer_tail = 0;
 314:../../tmk_core/common/action_tapping.c **** }
 315:../../tmk_core/common/action_tapping.c **** 
 316:../../tmk_core/common/action_tapping.c **** bool waiting_buffer_typed(keyevent_t event)
 317:../../tmk_core/common/action_tapping.c **** {
 318:../../tmk_core/common/action_tapping.c ****     for (uint8_t i = waiting_buffer_tail; i != waiting_buffer_head; i = (i + 1) % WAITING_BUFFER_SI
 319:../../tmk_core/common/action_tapping.c ****         if (KEYEQ(event.key, waiting_buffer[i].event.key) && event.pressed !=  waiting_buffer[i].ev
 320:../../tmk_core/common/action_tapping.c ****             return true;
 321:../../tmk_core/common/action_tapping.c ****         }
 322:../../tmk_core/common/action_tapping.c ****     }
 323:../../tmk_core/common/action_tapping.c ****     return false;
 324:../../tmk_core/common/action_tapping.c **** }
 325:../../tmk_core/common/action_tapping.c **** 
 326:../../tmk_core/common/action_tapping.c **** /* scan buffer for tapping */
 327:../../tmk_core/common/action_tapping.c **** void waiting_buffer_scan_tap(void)
 328:../../tmk_core/common/action_tapping.c **** {
 329:../../tmk_core/common/action_tapping.c ****     // tapping already is settled
 330:../../tmk_core/common/action_tapping.c ****     if (tapping_key.tap.count > 0) return;
 331:../../tmk_core/common/action_tapping.c ****     // invalid state: tapping_key released && tap.count == 0
 332:../../tmk_core/common/action_tapping.c ****     if (!tapping_key.event.pressed) return;
 333:../../tmk_core/common/action_tapping.c **** 
 334:../../tmk_core/common/action_tapping.c ****     for (uint8_t i = waiting_buffer_tail; i != waiting_buffer_head; i = (i + 1) % WAITING_BUFFER_SI
 335:../../tmk_core/common/action_tapping.c ****         if (IS_TAPPING_KEY(waiting_buffer[i].event.key) &&
 336:../../tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 337:../../tmk_core/common/action_tapping.c ****                 WITHIN_TAPPING_TERM(waiting_buffer[i].event)) {
 338:../../tmk_core/common/action_tapping.c ****             tapping_key.tap.count = 1;
 339:../../tmk_core/common/action_tapping.c ****             waiting_buffer[i].tap.count = 1;
 340:../../tmk_core/common/action_tapping.c ****             process_action(&tapping_key);
 341:../../tmk_core/common/action_tapping.c **** 
 342:../../tmk_core/common/action_tapping.c ****             debug("waiting_buffer_scan_tap: found at ["); debug_dec(i); debug("]\n");
 343:../../tmk_core/common/action_tapping.c ****             debug_waiting_buffer();
 344:../../tmk_core/common/action_tapping.c ****             return;
 345:../../tmk_core/common/action_tapping.c ****         }
 346:../../tmk_core/common/action_tapping.c ****     }
 347:../../tmk_core/common/action_tapping.c **** }
 348:../../tmk_core/common/action_tapping.c **** 
 349:../../tmk_core/common/action_tapping.c **** 
 350:../../tmk_core/common/action_tapping.c **** /*
 351:../../tmk_core/common/action_tapping.c ****  * debug print
 352:../../tmk_core/common/action_tapping.c ****  */
 353:../../tmk_core/common/action_tapping.c **** static void debug_tapping_key(void)
 354:../../tmk_core/common/action_tapping.c **** {
 355:../../tmk_core/common/action_tapping.c ****     debug("TAPPING_KEY="); debug_record(tapping_key); debug("\n");
 356:../../tmk_core/common/action_tapping.c **** }
 357:../../tmk_core/common/action_tapping.c **** 
 358:../../tmk_core/common/action_tapping.c **** static void debug_waiting_buffer(void)
 359:../../tmk_core/common/action_tapping.c **** {
  15               		.loc 1 359 0
  16               		.cfi_startproc
  17 0000 1F93      		push r17
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 17, -2
  21 0002 CF93      		push r28
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 28, -3
  25 0004 DF93      		push r29
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 5
  28               		.cfi_offset 29, -4
  29               	/* prologue: function */
  30               	/* frame size = 0 */
  31               	/* stack size = 3 */
  32               	.L__stack_usage = 3
  33               	.LBB3:
 360:../../tmk_core/common/action_tapping.c ****     debug("{ ");
 361:../../tmk_core/common/action_tapping.c ****     for (uint8_t i = waiting_buffer_tail; i != waiting_buffer_head; i = (i + 1) % WAITING_BUFFER_SI
  34               		.loc 1 361 0
  35 0006 C091 0000 		lds r28,waiting_buffer_tail
  36               	.LVL0:
 362:../../tmk_core/common/action_tapping.c ****         debug("["); debug_dec(i); debug("]="); debug_record(waiting_buffer[i]); debug(" ");
  37               		.loc 1 362 0
  38 000a 16E0      		ldi r17,lo8(6)
  39               	.LVL1:
  40               	.L2:
 361:../../tmk_core/common/action_tapping.c ****         debug("["); debug_dec(i); debug("]="); debug_record(waiting_buffer[i]); debug(" ");
  41               		.loc 1 361 0 discriminator 1
  42 000c 8091 0000 		lds r24,waiting_buffer_head
  43 0010 C817      		cp r28,r24
  44 0012 01F0      		breq .L5
  45               		.loc 1 362 0 discriminator 3
  46 0014 D0E0      		ldi r29,0
  47 0016 1C9F      		mul r17,r28
  48 0018 F001      		movw r30,r0
  49 001a 1D9F      		mul r17,r29
  50 001c F00D      		add r31,r0
  51 001e 1124      		clr __zero_reg__
  52 0020 E050      		subi r30,lo8(-(waiting_buffer))
  53 0022 F040      		sbci r31,hi8(-(waiting_buffer))
  54 0024 4081      		ld r20,Z
  55 0026 5181      		ldd r21,Z+1
  56 0028 6281      		ldd r22,Z+2
  57 002a 7381      		ldd r23,Z+3
  58 002c 8481      		ldd r24,Z+4
  59 002e 9581      		ldd r25,Z+5
  60 0030 0E94 0000 		call debug_record
  61               	.LVL2:
 361:../../tmk_core/common/action_tapping.c ****         debug("["); debug_dec(i); debug("]="); debug_record(waiting_buffer[i]); debug(" ");
  62               		.loc 1 361 0 discriminator 3
  63 0034 2196      		adiw r28,1
  64               	.LVL3:
  65 0036 C770      		andi r28,lo8(7)
  66 0038 00C0      		rjmp .L2
  67               	.LVL4:
  68               	.L5:
  69               	/* epilogue start */
  70               	.LBE3:
 363:../../tmk_core/common/action_tapping.c ****     }
 364:../../tmk_core/common/action_tapping.c ****     debug("}\n");
 365:../../tmk_core/common/action_tapping.c **** }
  71               		.loc 1 365 0
  72 003a DF91      		pop r29
  73 003c CF91      		pop r28
  74               	.LVL5:
  75 003e 1F91      		pop r17
  76 0040 0895      		ret
  77               		.cfi_endproc
  78               	.LFE11:
  80               		.section	.text.debug_tapping_key,"ax",@progbits
  82               	debug_tapping_key:
  83               	.LFB10:
 354:../../tmk_core/common/action_tapping.c ****     debug("TAPPING_KEY="); debug_record(tapping_key); debug("\n");
  84               		.loc 1 354 0
  85               		.cfi_startproc
  86               	/* prologue: function */
  87               	/* frame size = 0 */
  88               	/* stack size = 0 */
  89               	.L__stack_usage = 0
 355:../../tmk_core/common/action_tapping.c **** }
  90               		.loc 1 355 0
  91 0000 4091 0000 		lds r20,tapping_key
  92 0004 5091 0000 		lds r21,tapping_key+1
  93 0008 6091 0000 		lds r22,tapping_key+2
  94 000c 7091 0000 		lds r23,tapping_key+3
  95 0010 8091 0000 		lds r24,tapping_key+4
  96 0014 9091 0000 		lds r25,tapping_key+5
  97 0018 0C94 0000 		jmp debug_record
  98               	.LVL6:
  99               		.cfi_endproc
 100               	.LFE10:
 102               		.section	.text.waiting_buffer_scan_tap,"ax",@progbits
 104               	waiting_buffer_scan_tap:
 105               	.LFB9:
 328:../../tmk_core/common/action_tapping.c ****     // tapping already is settled
 106               		.loc 1 328 0
 107               		.cfi_startproc
 108 0000 CF93      		push r28
 109               	.LCFI3:
 110               		.cfi_def_cfa_offset 3
 111               		.cfi_offset 28, -2
 112               	/* prologue: function */
 113               	/* frame size = 0 */
 114               	/* stack size = 1 */
 115               	.L__stack_usage = 1
 330:../../tmk_core/common/action_tapping.c ****     // invalid state: tapping_key released && tap.count == 0
 116               		.loc 1 330 0
 117 0002 8091 0000 		lds r24,tapping_key+5
 118 0006 8295      		swap r24
 119 0008 8F70      		andi r24,lo8(15)
 120 000a 01F0      		breq .+2
 121 000c 00C0      		rjmp .L7
 332:../../tmk_core/common/action_tapping.c **** 
 122               		.loc 1 332 0
 123 000e 8091 0000 		lds r24,tapping_key+2
 124 0012 8823      		tst r24
 125 0014 01F4      		brne .+2
 126 0016 00C0      		rjmp .L7
 127               	.LBB7:
 334:../../tmk_core/common/action_tapping.c ****         if (IS_TAPPING_KEY(waiting_buffer[i].event.key) &&
 128               		.loc 1 334 0
 129 0018 8091 0000 		lds r24,waiting_buffer_tail
 130               	.LVL7:
 131 001c B091 0000 		lds r27,waiting_buffer_head
 132 0020 7091 0000 		lds r23,tapping_key
 133 0024 A091 0000 		lds r26,tapping_key+1
 134 0028 4091 0000 		lds r20,tapping_key+3
 135 002c 5091 0000 		lds r21,tapping_key+3+1
 136               	.LBB8:
 137               	.LBB9:
 138               		.file 2 "../../tmk_core/common/keyboard.h"
   1:../../tmk_core/common/keyboard.h **** /*
   2:../../tmk_core/common/keyboard.h **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.h **** 
   4:../../tmk_core/common/keyboard.h **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.h **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.h **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.h **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.h **** 
   9:../../tmk_core/common/keyboard.h **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.h **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.h **** 
  14:../../tmk_core/common/keyboard.h **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.h **** */
  17:../../tmk_core/common/keyboard.h **** 
  18:../../tmk_core/common/keyboard.h **** #ifndef KEYBOARD_H
  19:../../tmk_core/common/keyboard.h **** #define KEYBOARD_H
  20:../../tmk_core/common/keyboard.h **** 
  21:../../tmk_core/common/keyboard.h **** #include <stdbool.h>
  22:../../tmk_core/common/keyboard.h **** #include <stdint.h>
  23:../../tmk_core/common/keyboard.h **** 
  24:../../tmk_core/common/keyboard.h **** 
  25:../../tmk_core/common/keyboard.h **** #ifdef __cplusplus
  26:../../tmk_core/common/keyboard.h **** extern "C" {
  27:../../tmk_core/common/keyboard.h **** #endif
  28:../../tmk_core/common/keyboard.h **** 
  29:../../tmk_core/common/keyboard.h **** /* key matrix position */
  30:../../tmk_core/common/keyboard.h **** typedef struct {
  31:../../tmk_core/common/keyboard.h ****     uint8_t col;
  32:../../tmk_core/common/keyboard.h ****     uint8_t row;
  33:../../tmk_core/common/keyboard.h **** } keypos_t;
  34:../../tmk_core/common/keyboard.h **** 
  35:../../tmk_core/common/keyboard.h **** /* key event */
  36:../../tmk_core/common/keyboard.h **** typedef struct {
  37:../../tmk_core/common/keyboard.h ****     keypos_t key;
  38:../../tmk_core/common/keyboard.h ****     bool     pressed;
  39:../../tmk_core/common/keyboard.h ****     uint16_t time;
  40:../../tmk_core/common/keyboard.h **** } keyevent_t;
  41:../../tmk_core/common/keyboard.h **** 
  42:../../tmk_core/common/keyboard.h **** /* equivalent test of keypos_t */
  43:../../tmk_core/common/keyboard.h **** #define KEYEQ(keya, keyb)       ((keya).row == (keyb).row && (keya).col == (keyb).col)
  44:../../tmk_core/common/keyboard.h **** 
  45:../../tmk_core/common/keyboard.h **** /* Rules for No Event:
  46:../../tmk_core/common/keyboard.h ****  * 1) (time == 0) to handle (keyevent_t){} as empty event
  47:../../tmk_core/common/keyboard.h ****  * 2) Matrix(255, 255) to make TICK event available
  48:../../tmk_core/common/keyboard.h ****  */
  49:../../tmk_core/common/keyboard.h **** static inline bool IS_NOEVENT(keyevent_t event) { return event.time == 0 || (event.key.row == 255 &
 139               		.loc 2 49 0
 140 0030 91E0      		ldi r25,lo8(1)
 141 0032 7F3F      		cpi r23,lo8(-1)
 142 0034 01F0      		breq .L9
 143 0036 90E0      		ldi r25,0
 144               	.L9:
 145 0038 692F      		mov r22,r25
 146               	.LBE9:
 147               	.LBE8:
 335:../../tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 148               		.loc 1 335 0
 149 003a C6E0      		ldi r28,lo8(6)
 150               	.LVL8:
 151               	.L10:
 334:../../tmk_core/common/action_tapping.c ****         if (IS_TAPPING_KEY(waiting_buffer[i].event.key) &&
 152               		.loc 1 334 0 discriminator 1
 153 003c 8B17      		cp r24,r27
 154 003e 01F4      		brne .+2
 155 0040 00C0      		rjmp .L7
 156               	.LBB11:
 157               	.LBB10:
 158               		.loc 2 49 0
 159 0042 4115      		cp r20,__zero_reg__
 160 0044 5105      		cpc r21,__zero_reg__
 161 0046 01F0      		breq .L18
 162 0048 AF3F      		cpi r26,lo8(-1)
 163 004a 01F0      		breq .L19
 164 004c 20E0      		ldi r18,0
 165 004e 00C0      		rjmp .L11
 166               	.L18:
 167 0050 21E0      		ldi r18,lo8(1)
 168 0052 00C0      		rjmp .L11
 169               	.L19:
 170 0054 262F      		mov r18,r22
 171               	.L11:
 172 0056 90E0      		ldi r25,0
 173               	.LBE10:
 174               	.LBE11:
 335:../../tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 175               		.loc 1 335 0
 176 0058 20FD      		sbrc r18,0
 177 005a 00C0      		rjmp .L12
 335:../../tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 178               		.loc 1 335 0 is_stmt 0 discriminator 1
 179 005c C89F      		mul r28,r24
 180 005e F001      		movw r30,r0
 181 0060 C99F      		mul r28,r25
 182 0062 F00D      		add r31,r0
 183 0064 1124      		clr __zero_reg__
 184 0066 E050      		subi r30,lo8(-(waiting_buffer))
 185 0068 F040      		sbci r31,hi8(-(waiting_buffer))
 186 006a 2181      		ldd r18,Z+1
 187 006c 2A13      		cpse r18,r26
 188 006e 00C0      		rjmp .L12
 335:../../tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 189               		.loc 1 335 0 discriminator 2
 190 0070 2081      		ld r18,Z
 191 0072 2713      		cpse r18,r23
 192 0074 00C0      		rjmp .L12
 335:../../tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 193               		.loc 1 335 0 discriminator 3
 194 0076 2281      		ldd r18,Z+2
 195 0078 2111      		cpse r18,__zero_reg__
 196 007a 00C0      		rjmp .L12
 337:../../tmk_core/common/action_tapping.c ****             tapping_key.tap.count = 1;
 197               		.loc 1 337 0 is_stmt 1
 198 007c 2381      		ldd r18,Z+3
 199 007e 3481      		ldd r19,Z+4
 200 0080 2417      		cp r18,r20
 201 0082 3507      		cpc r19,r21
 202 0084 00F4      		brsh .L28
 337:../../tmk_core/common/action_tapping.c ****             tapping_key.tap.count = 1;
 203               		.loc 1 337 0 is_stmt 0 discriminator 2
 204 0086 2150      		subi r18,1
 205 0088 3109      		sbc r19,__zero_reg__
 206               	.L28:
 207 008a 241B      		sub r18,r20
 208 008c 350B      		sbc r19,r21
 209 008e 283C      		cpi r18,-56
 210 0090 3105      		cpc r19,__zero_reg__
 211 0092 00F4      		brsh .L12
 338:../../tmk_core/common/action_tapping.c ****             waiting_buffer[i].tap.count = 1;
 212               		.loc 1 338 0 is_stmt 1
 213 0094 2091 0000 		lds r18,tapping_key+5
 214 0098 2F70      		andi r18,lo8(15)
 215 009a 2061      		ori r18,lo8(16)
 216 009c 2093 0000 		sts tapping_key+5,r18
 339:../../tmk_core/common/action_tapping.c ****             process_action(&tapping_key);
 217               		.loc 1 339 0
 218 00a0 26E0      		ldi r18,lo8(6)
 219 00a2 289F      		mul r18,r24
 220 00a4 F001      		movw r30,r0
 221 00a6 299F      		mul r18,r25
 222 00a8 F00D      		add r31,r0
 223 00aa 1124      		clr __zero_reg__
 224 00ac E050      		subi r30,lo8(-(waiting_buffer+5))
 225 00ae F040      		sbci r31,hi8(-(waiting_buffer+5))
 226 00b0 8081      		ld r24,Z
 227               	.LVL9:
 228 00b2 8F70      		andi r24,lo8(15)
 229 00b4 8061      		ori r24,lo8(16)
 230 00b6 8083      		st Z,r24
 340:../../tmk_core/common/action_tapping.c **** 
 231               		.loc 1 340 0
 232 00b8 80E0      		ldi r24,lo8(tapping_key)
 233 00ba 90E0      		ldi r25,hi8(tapping_key)
 234 00bc 0E94 0000 		call process_action
 235               	.LVL10:
 236               	/* epilogue start */
 237               	.LBE7:
 347:../../tmk_core/common/action_tapping.c **** 
 238               		.loc 1 347 0
 239 00c0 CF91      		pop r28
 240               	.LBB12:
 343:../../tmk_core/common/action_tapping.c ****             return;
 241               		.loc 1 343 0
 242 00c2 0C94 0000 		jmp debug_waiting_buffer
 243               	.LVL11:
 244               	.L12:
 334:../../tmk_core/common/action_tapping.c ****         if (IS_TAPPING_KEY(waiting_buffer[i].event.key) &&
 245               		.loc 1 334 0 discriminator 2
 246 00c6 0196      		adiw r24,1
 247               	.LVL12:
 248 00c8 8770      		andi r24,lo8(7)
 249 00ca 00C0      		rjmp .L10
 250               	.L7:
 251               	/* epilogue start */
 252               	.LBE12:
 347:../../tmk_core/common/action_tapping.c **** 
 253               		.loc 1 347 0
 254 00cc CF91      		pop r28
 255 00ce 0895      		ret
 256               		.cfi_endproc
 257               	.LFE9:
 259               		.section	.text.process_tapping,"ax",@progbits
 261               	process_tapping:
 262               	.LFB5:
  79:../../tmk_core/common/action_tapping.c ****     keyevent_t event = keyp->event;
 263               		.loc 1 79 0
 264               		.cfi_startproc
 265               	.LVL13:
 266 0000 AF92      		push r10
 267               	.LCFI4:
 268               		.cfi_def_cfa_offset 3
 269               		.cfi_offset 10, -2
 270 0002 BF92      		push r11
 271               	.LCFI5:
 272               		.cfi_def_cfa_offset 4
 273               		.cfi_offset 11, -3
 274 0004 CF92      		push r12
 275               	.LCFI6:
 276               		.cfi_def_cfa_offset 5
 277               		.cfi_offset 12, -4
 278 0006 DF92      		push r13
 279               	.LCFI7:
 280               		.cfi_def_cfa_offset 6
 281               		.cfi_offset 13, -5
 282 0008 EF92      		push r14
 283               	.LCFI8:
 284               		.cfi_def_cfa_offset 7
 285               		.cfi_offset 14, -6
 286 000a FF92      		push r15
 287               	.LCFI9:
 288               		.cfi_def_cfa_offset 8
 289               		.cfi_offset 15, -7
 290 000c 0F93      		push r16
 291               	.LCFI10:
 292               		.cfi_def_cfa_offset 9
 293               		.cfi_offset 16, -8
 294 000e 1F93      		push r17
 295               	.LCFI11:
 296               		.cfi_def_cfa_offset 10
 297               		.cfi_offset 17, -9
 298 0010 CF93      		push r28
 299               	.LCFI12:
 300               		.cfi_def_cfa_offset 11
 301               		.cfi_offset 28, -10
 302 0012 DF93      		push r29
 303               	.LCFI13:
 304               		.cfi_def_cfa_offset 12
 305               		.cfi_offset 29, -11
 306 0014 CDB7      		in r28,__SP_L__
 307 0016 DEB7      		in r29,__SP_H__
 308               	.LCFI14:
 309               		.cfi_def_cfa_register 28
 310 0018 6197      		sbiw r28,17
 311               	.LCFI15:
 312               		.cfi_def_cfa_offset 29
 313 001a 0FB6      		in __tmp_reg__,__SREG__
 314 001c F894      		cli
 315 001e DEBF      		out __SP_H__,r29
 316 0020 0FBE      		out __SREG__,__tmp_reg__
 317 0022 CDBF      		out __SP_L__,r28
 318               	/* prologue: function */
 319               	/* frame size = 17 */
 320               	/* stack size = 27 */
 321               	.L__stack_usage = 27
 322 0024 7C01      		movw r14,r24
  80:../../tmk_core/common/action_tapping.c **** 
 323               		.loc 1 80 0
 324 0026 85E0      		ldi r24,lo8(5)
 325               	.LVL14:
 326 0028 F701      		movw r30,r14
 327 002a DE01      		movw r26,r28
 328 002c 1D96      		adiw r26,13
 329               		0:
 330 002e 0190      		ld r0,Z+
 331 0030 0D92      		st X+,r0
 332 0032 8A95      		dec r24
 333 0034 01F4      		brne 0b
 334 0036 D701      		movw r26,r14
 335 0038 4C91      		ld r20,X
 336               	.LVL15:
 337 003a 1196      		adiw r26,1
 338 003c 5C91      		ld r21,X
 339 003e 1197      		sbiw r26,1
 340               	.LVL16:
 341 0040 1296      		adiw r26,2
 342 0042 DC90      		ld r13,X
 343 0044 1297      		sbiw r26,2
 344               	.LVL17:
 345 0046 1396      		adiw r26,3
 346 0048 0D91      		ld r16,X+
 347 004a 1C91      		ld r17,X
 348 004c 1497      		sbiw r26,3+1
 349               	.LVL18:
 350 004e 3091 0000 		lds r19,tapping_key
 351 0052 6091 0000 		lds r22,tapping_key+1
 352 0056 8091 0000 		lds r24,tapping_key+3
 353 005a 9091 0000 		lds r25,tapping_key+3+1
 354               	.LBB23:
 355               	.LBB24:
 356               		.loc 2 49 0
 357 005e 0097      		sbiw r24,0
 358 0060 01F0      		breq .L72
 359 0062 6F3F      		cpi r22,lo8(-1)
 360 0064 01F4      		brne .L73
 361 0066 21E0      		ldi r18,lo8(1)
 362 0068 3F3F      		cpi r19,lo8(-1)
 363 006a 01F4      		brne .L73
 364 006c 00C0      		rjmp .L30
 365               	.L72:
 366 006e 21E0      		ldi r18,lo8(1)
 367 0070 00C0      		rjmp .L30
 368               	.L73:
 369 0072 20E0      		ldi r18,0
 370               	.L30:
 371               	.LBE24:
 372               	.LBE23:
  83:../../tmk_core/common/action_tapping.c ****         if (WITHIN_TAPPING_TERM(event)) {
 373               		.loc 1 83 0
 374 0074 B22F      		mov r27,r18
 375 0076 B170      		andi r27,lo8(1)
 376 0078 BB2E      		mov r11,r27
 377 007a 20FD      		sbrc r18,0
 378 007c 00C0      		rjmp .L32
  83:../../tmk_core/common/action_tapping.c ****         if (WITHIN_TAPPING_TERM(event)) {
 379               		.loc 1 83 0 is_stmt 0 discriminator 1
 380 007e A090 0000 		lds r10,tapping_key+2
 381 0082 AA20      		tst r10
 382 0084 01F4      		brne .+2
 383 0086 00C0      		rjmp .L33
 384 0088 2091 0000 		lds r18,tapping_key+5
  84:../../tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
 385               		.loc 1 84 0 is_stmt 1
 386 008c 0817      		cp r16,r24
 387 008e 1907      		cpc r17,r25
 388 0090 00F0      		brlo .L34
  84:../../tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
 389               		.loc 1 84 0 is_stmt 0 discriminator 1
 390 0092 F801      		movw r30,r16
 391 0094 E81B      		sub r30,r24
 392 0096 F90B      		sbc r31,r25
 393 0098 CF01      		movw r24,r30
 394 009a 00C0      		rjmp .L137
 395               	.L34:
  84:../../tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
 396               		.loc 1 84 0 discriminator 2
 397 009c 8095      		com r24
 398 009e 9095      		com r25
 399 00a0 800F      		add r24,r16
 400 00a2 911F      		adc r25,r17
 401               	.L137:
 402 00a4 CC24      		clr r12
 403 00a6 C394      		inc r12
 404 00a8 883C      		cpi r24,-56
 405 00aa 9105      		cpc r25,__zero_reg__
 406 00ac 00F0      		brlo .L93
 407 00ae C12C      		mov r12,__zero_reg__
 184:../../tmk_core/common/action_tapping.c ****                 debug("Tapping: End. Timeout. Not tap(0): ");
 408               		.loc 1 184 0 is_stmt 1 discriminator 2
 409 00b0 207F      		andi r18,lo8(-16)
 410 00b2 01F0      		breq .+2
 411 00b4 00C0      		rjmp .L60
 186:../../tmk_core/common/action_tapping.c ****                 process_action(&tapping_key);
 412               		.loc 1 186 0
 413 00b6 702F      		mov r23,r16
 414 00b8 198B      		std Y+17,r17
 415 00ba 088B      		std Y+16,r16
 416 00bc 6D2D      		mov r22,r13
 417 00be 8989      		ldd r24,Y+17
 418 00c0 0E94 0000 		call debug_event
 419               	.LVL19:
 187:../../tmk_core/common/action_tapping.c ****                 tapping_key = (keyrecord_t){};
 420               		.loc 1 187 0
 421 00c4 80E0      		ldi r24,lo8(tapping_key)
 422 00c6 90E0      		ldi r25,hi8(tapping_key)
 423 00c8 0E94 0000 		call process_action
 424               	.LVL20:
 425 00cc 00C0      		rjmp .L134
 426               	.LVL21:
 427               	.L93:
  85:../../tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key) && !event.pressed) {
 428               		.loc 1 85 0
 429 00ce 822F      		mov r24,r18
 430 00d0 807F      		andi r24,lo8(-16)
 431 00d2 01F0      		breq .+2
 432 00d4 00C0      		rjmp .L39
  86:../../tmk_core/common/action_tapping.c ****                     // first tap!
 433               		.loc 1 86 0 discriminator 1
 434 00d6 5613      		cpse r21,r22
 435 00d8 00C0      		rjmp .L40
  86:../../tmk_core/common/action_tapping.c ****                     // first tap!
 436               		.loc 1 86 0 is_stmt 0 discriminator 2
 437 00da 4313      		cpse r20,r19
 438 00dc 00C0      		rjmp .L40
  86:../../tmk_core/common/action_tapping.c ****                     // first tap!
 439               		.loc 1 86 0 discriminator 3
 440 00de CD2C      		mov r12,r13
 441 00e0 D110      		cpse r13,__zero_reg__
 442 00e2 00C0      		rjmp .L40
 443               	.LVL22:
  89:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 444               		.loc 1 89 0 is_stmt 1
 445 00e4 2F70      		andi r18,lo8(15)
 446 00e6 2061      		ori r18,lo8(16)
 447 00e8 2093 0000 		sts tapping_key+5,r18
  90:../../tmk_core/common/action_tapping.c ****                     process_action(&tapping_key);
 448               		.loc 1 90 0
 449 00ec 0E94 0000 		call debug_tapping_key
 450               	.LVL23:
  91:../../tmk_core/common/action_tapping.c **** 
 451               		.loc 1 91 0
 452 00f0 80E0      		ldi r24,lo8(tapping_key)
 453 00f2 90E0      		ldi r25,hi8(tapping_key)
 454 00f4 0E94 0000 		call process_action
 455               	.LVL24:
  94:../../tmk_core/common/action_tapping.c ****                     // enqueue
 456               		.loc 1 94 0
 457 00f8 8091 0000 		lds r24,tapping_key+5
 458 00fc D701      		movw r26,r14
 459 00fe 1596      		adiw r26,5
 460 0100 8C93      		st X,r24
  96:../../tmk_core/common/action_tapping.c ****                 }
 461               		.loc 1 96 0
 462 0102 00C0      		rjmp .L95
 463               	.LVL25:
 464               	.L40:
 465               	.LBB25:
 466               	.LBB26:
 467               	.LBB27:
 468               	.LBB28:
 469               		.loc 2 49 0
 470 0104 0115      		cp r16,__zero_reg__
 471 0106 1105      		cpc r17,__zero_reg__
 472 0108 01F0      		breq .L74
 473 010a 5F3F      		cpi r21,lo8(-1)
 474 010c 01F4      		brne .L75
 475 010e 81E0      		ldi r24,lo8(1)
 476 0110 4F3F      		cpi r20,lo8(-1)
 477 0112 01F4      		brne .L75
 478 0114 00C0      		rjmp .L42
 479               	.L74:
 480 0116 81E0      		ldi r24,lo8(1)
 481 0118 00C0      		rjmp .L42
 482               	.L75:
 483 011a 80E0      		ldi r24,0
 484               	.L42:
 485               	.LBE28:
 486               	.LBE27:
  50:../../tmk_core/common/keyboard.h **** static inline bool IS_PRESSED(keyevent_t event) { return (!IS_NOEVENT(event) && event.pressed); }
  51:../../tmk_core/common/keyboard.h **** static inline bool IS_RELEASED(keyevent_t event) { return (!IS_NOEVENT(event) && !event.pressed); }
 487               		.loc 2 51 0
 488 011c 80FD      		sbrc r24,0
 489 011e 00C0      		rjmp .L76
 490 0120 81E0      		ldi r24,lo8(1)
 491 0122 8D25      		eor r24,r13
 492 0124 00C0      		rjmp .L44
 493               	.L76:
 494 0126 80E0      		ldi r24,0
 495 0128 90E0      		ldi r25,0
 496               	.L44:
 497               	.LBE26:
 498               	.LBE25:
 116:../../tmk_core/common/action_tapping.c ****                     // Modifier should be retained till end of this tapping.
 499               		.loc 1 116 0
 500 012a B82F      		mov r27,r24
 501 012c B170      		andi r27,lo8(1)
 502 012e CB2E      		mov r12,r27
 503 0130 80FF      		sbrs r24,0
 504 0132 00C0      		rjmp .L45
 505               	.LBB29:
 506               	.LBB30:
 318:../../tmk_core/common/action_tapping.c ****         if (KEYEQ(event.key, waiting_buffer[i].event.key) && event.pressed !=  waiting_buffer[i].ev
 507               		.loc 1 318 0 discriminator 1
 508 0134 8091 0000 		lds r24,waiting_buffer_tail
 509               	.LVL26:
 510 0138 2091 0000 		lds r18,waiting_buffer_head
 319:../../tmk_core/common/action_tapping.c ****             return true;
 511               		.loc 1 319 0 discriminator 1
 512 013c 36E0      		ldi r19,lo8(6)
 513               	.LVL27:
 514               	.L46:
 318:../../tmk_core/common/action_tapping.c ****         if (KEYEQ(event.key, waiting_buffer[i].event.key) && event.pressed !=  waiting_buffer[i].ev
 515               		.loc 1 318 0
 516 013e 8217      		cp r24,r18
 517 0140 01F4      		brne .+2
 518 0142 00C0      		rjmp .L141
 319:../../tmk_core/common/action_tapping.c ****             return true;
 519               		.loc 1 319 0
 520 0144 90E0      		ldi r25,0
 521 0146 389F      		mul r19,r24
 522 0148 F001      		movw r30,r0
 523 014a 399F      		mul r19,r25
 524 014c F00D      		add r31,r0
 525 014e 1124      		clr __zero_reg__
 526 0150 E050      		subi r30,lo8(-(waiting_buffer))
 527 0152 F040      		sbci r31,hi8(-(waiting_buffer))
 528 0154 6181      		ldd r22,Z+1
 529 0156 5613      		cpse r21,r22
 530 0158 00C0      		rjmp .L47
 531 015a 6081      		ld r22,Z
 532 015c 4613      		cpse r20,r22
 533 015e 00C0      		rjmp .L47
 534 0160 6281      		ldd r22,Z+2
 535 0162 D612      		cpse r13,r22
 536 0164 00C0      		rjmp .L45
 537               	.L47:
 318:../../tmk_core/common/action_tapping.c ****         if (KEYEQ(event.key, waiting_buffer[i].event.key) && event.pressed !=  waiting_buffer[i].ev
 538               		.loc 1 318 0
 539 0166 0196      		adiw r24,1
 540               	.LVL28:
 541 0168 8770      		andi r24,lo8(7)
 542 016a 00C0      		rjmp .L46
 543               	.L45:
 544               	.LBE30:
 545               	.LBE29:
 138:../../tmk_core/common/action_tapping.c ****                         tapping_key.tap.interrupted = true;
 546               		.loc 1 138 0
 547 016c CD2C      		mov r12,r13
 548 016e DD20      		tst r13
 549 0170 01F4      		brne .+2
 550 0172 00C0      		rjmp .L95
 551               	.LVL29:
 139:../../tmk_core/common/action_tapping.c ****                     }
 552               		.loc 1 139 0
 553 0174 8091 0000 		lds r24,tapping_key+5
 554 0178 8160      		ori r24,lo8(1<<0)
 555 017a 8093 0000 		sts tapping_key+5,r24
 142:../../tmk_core/common/action_tapping.c ****                 }
 556               		.loc 1 142 0
 557 017e C12C      		mov r12,__zero_reg__
 558               	.LVL30:
 559 0180 00C0      		rjmp .L95
 560               	.LVL31:
 561               	.L39:
 147:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: Tap release("); debug_dec(tapping_key.tap.count); debug(")\n");
 562               		.loc 1 147 0 discriminator 1
 563 0182 5613      		cpse r21,r22
 564 0184 00C0      		rjmp .L56
 147:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: Tap release("); debug_dec(tapping_key.tap.count); debug(")\n");
 565               		.loc 1 147 0 is_stmt 0 discriminator 2
 566 0186 4313      		cpse r20,r19
 567 0188 00C0      		rjmp .L56
 147:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: Tap release("); debug_dec(tapping_key.tap.count); debug(")\n");
 568               		.loc 1 147 0 discriminator 3
 569 018a D110      		cpse r13,__zero_reg__
 570 018c 00C0      		rjmp .L56
 149:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 571               		.loc 1 149 0 is_stmt 1
 572 018e 8091 0000 		lds r24,tapping_key+5
 573 0192 D701      		movw r26,r14
 574 0194 00C0      		rjmp .L138
 575               	.L56:
 155:../../tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 576               		.loc 1 155 0
 577 0196 4D87      		std Y+13,r20
 578 0198 5E87      		std Y+14,r21
 579 019a DF86      		std Y+15,r13
 580 019c 702F      		mov r23,r16
 581 019e 198B      		std Y+17,r17
 582 01a0 088B      		std Y+16,r16
 583 01a2 6D2D      		mov r22,r13
 584 01a4 8989      		ldd r24,Y+17
 585 01a6 0E94 0000 		call is_tap_key
 586               	.LVL32:
 587 01aa 8823      		tst r24
 588 01ac 01F0      		breq .L68
 155:../../tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 589               		.loc 1 155 0 is_stmt 0 discriminator 1
 590 01ae DD20      		tst r13
 591 01b0 01F0      		breq .L68
 156:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Start new tap with releasing last tap(>1).\n");
 592               		.loc 1 156 0 is_stmt 1
 593 01b2 2091 0000 		lds r18,tapping_key+5
 594 01b6 822F      		mov r24,r18
 595 01b8 8295      		swap r24
 596 01ba 8F70      		andi r24,lo8(15)
 597 01bc 90E0      		ldi r25,0
 598 01be 0297      		sbiw r24,2
 599 01c0 04F0      		brlt .L59
 159:../../tmk_core/common/action_tapping.c ****                                 .tap = tapping_key.tap,
 600               		.loc 1 159 0
 601 01c2 8091 0000 		lds r24,tapping_key
 602 01c6 9091 0000 		lds r25,tapping_key+1
 603 01ca 9887      		std Y+8,r25
 604 01cc 8F83      		std Y+7,r24
 605 01ce 1986      		std Y+9,__zero_reg__
 606 01d0 1B87      		std Y+11,r17
 607 01d2 0A87      		std Y+10,r16
 608 01d4 2C87      		std Y+12,r18
 609 01d6 CE01      		movw r24,r28
 610 01d8 0796      		adiw r24,7
 611               	.L130:
 612 01da 0E94 0000 		call process_action
 613               	.LVL33:
 614               	.L59:
 168:../../tmk_core/common/action_tapping.c ****                     waiting_buffer_scan_tap();
 615               		.loc 1 168 0
 616 01de 86E0      		ldi r24,lo8(6)
 617 01e0 F701      		movw r30,r14
 618 01e2 A0E0      		ldi r26,lo8(tapping_key)
 619 01e4 B0E0      		ldi r27,hi8(tapping_key)
 620               		0:
 621 01e6 0190      		ld r0,Z+
 622 01e8 0D92      		st X+,r0
 623 01ea 8A95      		dec r24
 624 01ec 01F4      		brne 0b
 169:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 625               		.loc 1 169 0
 626 01ee 0E94 0000 		call waiting_buffer_scan_tap
 627               	.LVL34:
 170:../../tmk_core/common/action_tapping.c ****                     return true;
 628               		.loc 1 170 0
 629 01f2 0E94 0000 		call debug_tapping_key
 630               	.LVL35:
 631 01f6 00C0      		rjmp .L135
 632               	.LVL36:
 633               	.L60:
 192:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: End. last timeout tap release(>0).");
 634               		.loc 1 192 0 discriminator 1
 635 01f8 5617      		cp r21,r22
 636 01fa 01F0      		breq .L142
 637               	.L61:
 199:../../tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 638               		.loc 1 199 0
 639 01fc 4D87      		std Y+13,r20
 640 01fe 5E87      		std Y+14,r21
 641 0200 DF86      		std Y+15,r13
 642 0202 702F      		mov r23,r16
 643 0204 198B      		std Y+17,r17
 644 0206 088B      		std Y+16,r16
 645 0208 6D2D      		mov r22,r13
 646 020a 8989      		ldd r24,Y+17
 647 020c 0E94 0000 		call is_tap_key
 648               	.LVL37:
 649 0210 8111      		cpse r24,__zero_reg__
 650 0212 00C0      		rjmp .L143
 651               	.LVL38:
 652               	.L68:
 177:../../tmk_core/common/action_tapping.c ****                     return true;
 653               		.loc 1 177 0
 654 0214 C701      		movw r24,r14
 655 0216 0E94 0000 		call process_action
 656               	.LVL39:
 657               	.L135:
 178:../../tmk_core/common/action_tapping.c ****                 }
 658               		.loc 1 178 0
 659 021a CC24      		clr r12
 660 021c C394      		inc r12
 661 021e 00C0      		rjmp .L95
 662               	.LVL40:
 663               	.L33:
 227:../../tmk_core/common/action_tapping.c ****             if (event.pressed) {
 664               		.loc 1 227 0 discriminator 1
 665 0220 0817      		cp r16,r24
 666 0222 1907      		cpc r17,r25
 667 0224 00F4      		brsh .+2
 668 0226 00C0      		rjmp .L63
 669 0228 F801      		movw r30,r16
 670 022a E81B      		sub r30,r24
 671 022c F90B      		sbc r31,r25
 672 022e CF01      		movw r24,r30
 673               	.L140:
 227:../../tmk_core/common/action_tapping.c ****             if (event.pressed) {
 674               		.loc 1 227 0 is_stmt 0 discriminator 2
 675 0230 883C      		cpi r24,-56
 676 0232 9105      		cpc r25,__zero_reg__
 677 0234 00F4      		brsh .+2
 678 0236 00C0      		rjmp .L94
 679 0238 C12C      		mov r12,__zero_reg__
 267:../../tmk_core/common/action_tapping.c ****             tapping_key = (keyrecord_t){};
 680               		.loc 1 267 0 is_stmt 1 discriminator 2
 681 023a 702F      		mov r23,r16
 682 023c 198B      		std Y+17,r17
 683 023e 088B      		std Y+16,r16
 684 0240 6D2D      		mov r22,r13
 685 0242 8989      		ldd r24,Y+17
 686 0244 0E94 0000 		call debug_event
 687               	.LVL41:
 688               	.L134:
 188:../../tmk_core/common/action_tapping.c ****                 debug_tapping_key();
 689               		.loc 1 188 0
 690 0248 E0E0      		ldi r30,lo8(tapping_key)
 691 024a F0E0      		ldi r31,hi8(tapping_key)
 692 024c 86E0      		ldi r24,lo8(6)
 693 024e DF01      		movw r26,r30
 694               		0:
 695 0250 1D92      		st X+,__zero_reg__
 696 0252 8A95      		dec r24
 697 0254 01F4      		brne 0b
 698               	.L133:
 189:../../tmk_core/common/action_tapping.c ****                 return false;
 699               		.loc 1 189 0
 700 0256 0E94 0000 		call debug_tapping_key
 701               	.LVL42:
 190:../../tmk_core/common/action_tapping.c ****             }  else {
 702               		.loc 1 190 0
 703 025a 00C0      		rjmp .L95
 704               	.LVL43:
 705               	.L142:
 192:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: End. last timeout tap release(>0).");
 706               		.loc 1 192 0 discriminator 2
 707 025c 4313      		cpse r20,r19
 708 025e 00C0      		rjmp .L61
 192:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: End. last timeout tap release(>0).");
 709               		.loc 1 192 0 is_stmt 0 discriminator 3
 710 0260 D110      		cpse r13,__zero_reg__
 711 0262 00C0      		rjmp .L61
 194:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 712               		.loc 1 194 0 is_stmt 1
 713 0264 8091 0000 		lds r24,tapping_key+5
 714 0268 F701      		movw r30,r14
 715 026a 8583      		std Z+5,r24
 195:../../tmk_core/common/action_tapping.c ****                     tapping_key = (keyrecord_t){};
 716               		.loc 1 195 0
 717 026c C701      		movw r24,r14
 718 026e 0E94 0000 		call process_action
 719               	.LVL44:
 196:../../tmk_core/common/action_tapping.c ****                     return true;
 720               		.loc 1 196 0
 721 0272 86E0      		ldi r24,lo8(6)
 722 0274 E0E0      		ldi r30,lo8(tapping_key)
 723 0276 F0E0      		ldi r31,hi8(tapping_key)
 724 0278 DF01      		movw r26,r30
 725               		0:
 726 027a 1D92      		st X+,__zero_reg__
 727 027c 8A95      		dec r24
 728 027e 01F4      		brne 0b
 197:../../tmk_core/common/action_tapping.c ****                 }
 729               		.loc 1 197 0
 730 0280 CA2C      		mov r12,r10
 731 0282 00C0      		rjmp .L95
 732               	.LVL45:
 733               	.L143:
 199:../../tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 734               		.loc 1 199 0 discriminator 1
 735 0284 DD20      		tst r13
 736 0286 01F0      		breq .L68
 200:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Start new tap with releasing last timeout tap(>1).\n");
 737               		.loc 1 200 0
 738 0288 2091 0000 		lds r18,tapping_key+5
 739 028c 822F      		mov r24,r18
 740 028e 8295      		swap r24
 741 0290 8F70      		andi r24,lo8(15)
 742 0292 90E0      		ldi r25,0
 743 0294 0297      		sbiw r24,2
 744 0296 04F4      		brge .+2
 745 0298 00C0      		rjmp .L59
 203:../../tmk_core/common/action_tapping.c ****                                 .tap = tapping_key.tap,
 746               		.loc 1 203 0
 747 029a 8091 0000 		lds r24,tapping_key
 748 029e 9091 0000 		lds r25,tapping_key+1
 749 02a2 9A83      		std Y+2,r25
 750 02a4 8983      		std Y+1,r24
 751 02a6 1B82      		std Y+3,__zero_reg__
 752 02a8 1D83      		std Y+5,r17
 753 02aa 0C83      		std Y+4,r16
 754 02ac 2E83      		std Y+6,r18
 755 02ae CE01      		movw r24,r28
 756 02b0 0196      		adiw r24,1
 757 02b2 00C0      		rjmp .L130
 758               	.LVL46:
 759               	.L63:
 227:../../tmk_core/common/action_tapping.c ****             if (event.pressed) {
 760               		.loc 1 227 0 discriminator 2
 761 02b4 8095      		com r24
 762 02b6 9095      		com r25
 763 02b8 800F      		add r24,r16
 764 02ba 911F      		adc r25,r17
 765 02bc 00C0      		rjmp .L140
 766               	.L94:
 228:../../tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key)) {
 767               		.loc 1 228 0
 768 02be CD2C      		mov r12,r13
 769 02c0 DD20      		tst r13
 770 02c2 01F4      		brne .+2
 771 02c4 00C0      		rjmp .L68
 772               	.LVL47:
 229:../../tmk_core/common/action_tapping.c ****                     if (!tapping_key.tap.interrupted && tapping_key.tap.count > 0) {
 773               		.loc 1 229 0 discriminator 1
 774 02c6 5613      		cpse r21,r22
 775 02c8 00C0      		rjmp .L69
 229:../../tmk_core/common/action_tapping.c ****                     if (!tapping_key.tap.interrupted && tapping_key.tap.count > 0) {
 776               		.loc 1 229 0 is_stmt 0 discriminator 2
 777 02ca 4313      		cpse r20,r19
 778 02cc 00C0      		rjmp .L69
 230:../../tmk_core/common/action_tapping.c ****                         // sequential tap.
 779               		.loc 1 230 0 is_stmt 1
 780 02ce 2091 0000 		lds r18,tapping_key+5
 781 02d2 20FD      		sbrc r18,0
 782 02d4 00C0      		rjmp .L70
 230:../../tmk_core/common/action_tapping.c ****                         // sequential tap.
 783               		.loc 1 230 0 is_stmt 0 discriminator 1
 784 02d6 822F      		mov r24,r18
 785 02d8 8295      		swap r24
 786 02da 8F70      		andi r24,lo8(15)
 787 02dc 482F      		mov r20,r24
 788               	.LVL48:
 789 02de 50E0      		ldi r21,0
 790               	.LVL49:
 791 02e0 4115      		cp r20,__zero_reg__
 792 02e2 5105      		cpc r21,__zero_reg__
 793 02e4 01F0      		breq .L70
 232:../../tmk_core/common/action_tapping.c ****                         if (keyp->tap.count < 15) keyp->tap.count += 1;
 794               		.loc 1 232 0 is_stmt 1
 795 02e6 D701      		movw r26,r14
 796 02e8 1596      		adiw r26,5
 797 02ea 2C93      		st X,r18
 798 02ec 1597      		sbiw r26,5
 233:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Tap press("); debug_dec(keyp->tap.count); debug(")\n");
 799               		.loc 1 233 0
 800 02ee 4F30      		cpi r20,15
 801 02f0 5105      		cpc r21,__zero_reg__
 802 02f2 01F0      		breq .L71
 233:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Tap press("); debug_dec(keyp->tap.count); debug(")\n");
 803               		.loc 1 233 0 is_stmt 0 discriminator 1
 804 02f4 8F5F      		subi r24,lo8(-(1))
 805 02f6 982F      		mov r25,r24
 806 02f8 9295      		swap r25
 807 02fa 907F      		andi r25,lo8(-16)
 808 02fc 822F      		mov r24,r18
 809 02fe 8F70      		andi r24,lo8(15)
 810 0300 892B      		or r24,r25
 811               	.LVL50:
 812               	.L138:
 813 0302 1596      		adiw r26,5
 814 0304 8C93      		st X,r24
 815               	.L71:
 235:../../tmk_core/common/action_tapping.c ****                         tapping_key = *keyp;
 816               		.loc 1 235 0 is_stmt 1
 817 0306 C701      		movw r24,r14
 818 0308 0E94 0000 		call process_action
 819               	.LVL51:
 236:../../tmk_core/common/action_tapping.c ****                         debug_tapping_key();
 820               		.loc 1 236 0
 821 030c 86E0      		ldi r24,lo8(6)
 822 030e F701      		movw r30,r14
 823 0310 A0E0      		ldi r26,lo8(tapping_key)
 824 0312 B0E0      		ldi r27,hi8(tapping_key)
 825               		0:
 826 0314 0190      		ld r0,Z+
 827 0316 0D92      		st X+,r0
 828 0318 8A95      		dec r24
 829 031a 01F4      		brne 0b
 830 031c 00C0      		rjmp .L133
 831               	.LVL52:
 832               	.L70:
 241:../../tmk_core/common/action_tapping.c ****                         return true;
 833               		.loc 1 241 0
 834 031e 86E0      		ldi r24,lo8(6)
 835 0320 F701      		movw r30,r14
 836 0322 A0E0      		ldi r26,lo8(tapping_key)
 837 0324 B0E0      		ldi r27,hi8(tapping_key)
 838               		0:
 839 0326 0190      		ld r0,Z+
 840 0328 0D92      		st X+,r0
 841 032a 8A95      		dec r24
 842 032c 01F4      		brne 0b
 242:../../tmk_core/common/action_tapping.c ****                     }
 843               		.loc 1 242 0
 844 032e 00C0      		rjmp .L95
 845               	.LVL53:
 846               	.L69:
 244:../../tmk_core/common/action_tapping.c ****                     // Sequential tap can be interfered with other tap key.
 847               		.loc 1 244 0
 848 0330 4D87      		std Y+13,r20
 849 0332 5E87      		std Y+14,r21
 850 0334 DF86      		std Y+15,r13
 851 0336 702F      		mov r23,r16
 852 0338 198B      		std Y+17,r17
 853 033a 088B      		std Y+16,r16
 854 033c 6D2D      		mov r22,r13
 855 033e 8989      		ldd r24,Y+17
 856 0340 0E94 0000 		call is_tap_key
 857               	.LVL54:
 858 0344 8111      		cpse r24,__zero_reg__
 859 0346 00C0      		rjmp .L59
 254:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 860               		.loc 1 254 0
 861 0348 8091 0000 		lds r24,tapping_key+5
 862 034c 8160      		ori r24,lo8(1<<0)
 863 034e 8093 0000 		sts tapping_key+5,r24
 255:../../tmk_core/common/action_tapping.c ****                     return true;
 864               		.loc 1 255 0
 865 0352 C701      		movw r24,r14
 866 0354 0E94 0000 		call process_action
 867               	.LVL55:
 256:../../tmk_core/common/action_tapping.c ****                 }
 868               		.loc 1 256 0
 869 0358 00C0      		rjmp .L95
 870               	.LVL56:
 871               	.L32:
 275:../../tmk_core/common/action_tapping.c ****             debug("Tapping: Start(Press tap key).\n");
 872               		.loc 1 275 0
 873 035a DD20      		tst r13
 874 035c 01F4      		brne .+2
 875 035e 00C0      		rjmp .L68
 275:../../tmk_core/common/action_tapping.c ****             debug("Tapping: Start(Press tap key).\n");
 876               		.loc 1 275 0 is_stmt 0 discriminator 1
 877 0360 4D87      		std Y+13,r20
 878 0362 5E87      		std Y+14,r21
 879 0364 DF86      		std Y+15,r13
 880 0366 702F      		mov r23,r16
 881 0368 198B      		std Y+17,r17
 882 036a 088B      		std Y+16,r16
 883 036c 6D2D      		mov r22,r13
 884 036e 8989      		ldd r24,Y+17
 885 0370 0E94 0000 		call is_tap_key
 886               	.LVL57:
 887 0374 8823      		tst r24
 888 0376 01F4      		brne .+2
 889 0378 00C0      		rjmp .L68
 890 037a 00C0      		rjmp .L59
 891               	.LVL58:
 892               	.L141:
 893               	.LBB31:
 118:../../tmk_core/common/action_tapping.c ****                     switch (action.kind.id) {
 894               		.loc 1 118 0 is_stmt 1
 895 037c 702F      		mov r23,r16
 896 037e 198B      		std Y+17,r17
 897 0380 088B      		std Y+16,r16
 898 0382 6D2D      		mov r22,r13
 899 0384 8989      		ldd r24,Y+17
 900 0386 0E94 0000 		call layer_switch_get_action
 901               	.LVL59:
 119:../../tmk_core/common/action_tapping.c ****                         case ACT_LMODS:
 902               		.loc 1 119 0
 903 038a 292F      		mov r18,r25
 904 038c 2295      		swap r18
 905 038e 2F70      		andi r18,lo8(15)
 906 0390 2230      		cpi r18,lo8(2)
 907 0392 00F4      		brsh .L144
 122:../../tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 908               		.loc 1 122 0
 909 0394 9F70      		andi r25,lo8(15)
 910               	.LVL60:
 911 0396 01F0      		breq .L55
 122:../../tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 912               		.loc 1 122 0 is_stmt 0 discriminator 1
 913 0398 8111      		cpse r24,__zero_reg__
 914 039a 00C0      		rjmp .L55
 915 039c 00C0      		rjmp .L52
 916               	.LVL61:
 917               	.L144:
 119:../../tmk_core/common/action_tapping.c ****                         case ACT_LMODS:
 918               		.loc 1 119 0 is_stmt 1
 919 039e 2430      		cpi r18,lo8(4)
 920 03a0 00F4      		brsh .L53
 127:../../tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 921               		.loc 1 127 0
 922 03a2 9F70      		andi r25,lo8(15)
 923               	.LVL62:
 924 03a4 01F4      		brne .L145
 925               	.L55:
 128:../../tmk_core/common/action_tapping.c ****                             break;
 926               		.loc 1 128 0
 927 03a6 805E      		subi r24,lo8(-(32))
 928               	.LVL63:
 929 03a8 8830      		cpi r24,lo8(8)
 930 03aa 00F0      		brlo .L52
 931               	.LVL64:
 932               	.L53:
 133:../../tmk_core/common/action_tapping.c ****                     return true;
 933               		.loc 1 133 0
 934 03ac C701      		movw r24,r14
 935               	.LVL65:
 936 03ae 0E94 0000 		call process_action
 937               	.LVL66:
 134:../../tmk_core/common/action_tapping.c ****                 }
 938               		.loc 1 134 0
 939 03b2 BC2C      		mov r11,r12
 940               	.L52:
 941               	.LVL67:
 942 03b4 CB2C      		mov r12,r11
 943 03b6 00C0      		rjmp .L95
 944               	.LVL68:
 945               	.L145:
 127:../../tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 946               		.loc 1 127 0 discriminator 1
 947 03b8 F701      		movw r30,r14
 948 03ba 9581      		ldd r25,Z+5
 949 03bc 907F      		andi r25,lo8(-16)
 950 03be 01F4      		brne .L55
 951 03c0 00C0      		rjmp .L52
 952               	.LVL69:
 953               	.L95:
 954               	.LBE31:
 286:../../tmk_core/common/action_tapping.c **** 
 955               		.loc 1 286 0
 956 03c2 8C2D      		mov r24,r12
 957               	.LVL70:
 958               	/* epilogue start */
 959 03c4 6196      		adiw r28,17
 960 03c6 0FB6      		in __tmp_reg__,__SREG__
 961 03c8 F894      		cli
 962 03ca DEBF      		out __SP_H__,r29
 963 03cc 0FBE      		out __SREG__,__tmp_reg__
 964 03ce CDBF      		out __SP_L__,r28
 965 03d0 DF91      		pop r29
 966 03d2 CF91      		pop r28
 967 03d4 1F91      		pop r17
 968 03d6 0F91      		pop r16
 969               	.LVL71:
 970 03d8 FF90      		pop r15
 971 03da EF90      		pop r14
 972               	.LVL72:
 973 03dc DF90      		pop r13
 974               	.LVL73:
 975 03de CF90      		pop r12
 976 03e0 BF90      		pop r11
 977 03e2 AF90      		pop r10
 978 03e4 0895      		ret
 979               		.cfi_endproc
 980               	.LFE5:
 982               		.section	.text.action_tapping_process,"ax",@progbits
 983               	.global	action_tapping_process
 985               	action_tapping_process:
 986               	.LFB4:
  39:../../tmk_core/common/action_tapping.c ****     if (process_tapping(&record)) {
 987               		.loc 1 39 0
 988               		.cfi_startproc
 989 0000 1F93      		push r17
 990               	.LCFI16:
 991               		.cfi_def_cfa_offset 3
 992               		.cfi_offset 17, -2
 993 0002 CF93      		push r28
 994               	.LCFI17:
 995               		.cfi_def_cfa_offset 4
 996               		.cfi_offset 28, -3
 997 0004 DF93      		push r29
 998               	.LCFI18:
 999               		.cfi_def_cfa_offset 5
 1000               		.cfi_offset 29, -4
 1001 0006 CDB7      		in r28,__SP_L__
 1002 0008 DEB7      		in r29,__SP_H__
 1003               	.LCFI19:
 1004               		.cfi_def_cfa_register 28
 1005 000a 2C97      		sbiw r28,12
 1006               	.LCFI20:
 1007               		.cfi_def_cfa_offset 17
 1008 000c 0FB6      		in __tmp_reg__,__SREG__
 1009 000e F894      		cli
 1010 0010 DEBF      		out __SP_H__,r29
 1011 0012 0FBE      		out __SREG__,__tmp_reg__
 1012 0014 CDBF      		out __SP_L__,r28
 1013               	/* prologue: function */
 1014               	/* frame size = 12 */
 1015               	/* stack size = 15 */
 1016               	.L__stack_usage = 15
 1017 0016 4F83      		std Y+7,r20
 1018 0018 5887      		std Y+8,r21
 1019 001a 6987      		std Y+9,r22
 1020 001c 7A87      		std Y+10,r23
 1021 001e 8B87      		std Y+11,r24
 1022 0020 9C87      		std Y+12,r25
  40:../../tmk_core/common/action_tapping.c ****         if (!IS_NOEVENT(record.event)) {
 1023               		.loc 1 40 0
 1024 0022 CE01      		movw r24,r28
 1025 0024 0796      		adiw r24,7
 1026 0026 0E94 0000 		call process_tapping
 1027               	.LVL74:
 1028 002a 8823      		tst r24
 1029 002c 01F0      		breq .L147
 1030 002e 9F81      		ldd r25,Y+7
 1031 0030 8885      		ldd r24,Y+8
 1032               	.LBB40:
 1033               	.LBB41:
  49:../../tmk_core/common/keyboard.h **** static inline bool IS_PRESSED(keyevent_t event) { return (!IS_NOEVENT(event) && event.pressed); }
 1034               		.loc 2 49 0
 1035 0032 2A85      		ldd r18,Y+10
 1036 0034 3B85      		ldd r19,Y+11
 1037 0036 232B      		or r18,r19
 1038 0038 01F0      		breq .L160
 1039 003a 8F3F      		cpi r24,lo8(-1)
 1040 003c 01F4      		brne .L161
 1041 003e 81E0      		ldi r24,lo8(1)
 1042 0040 9F3F      		cpi r25,lo8(-1)
 1043 0042 01F4      		brne .L161
 1044 0044 00C0      		rjmp .L148
 1045               	.L160:
 1046 0046 81E0      		ldi r24,lo8(1)
 1047 0048 00C0      		rjmp .L148
 1048               	.L161:
 1049 004a 80E0      		ldi r24,0
 1050               	.L148:
 1051               	.LBE41:
 1052               	.LBE40:
  41:../../tmk_core/common/action_tapping.c ****             debug("processed: "); debug_record(record); debug("\n");
 1053               		.loc 1 41 0
 1054 004c 80FD      		sbrc r24,0
 1055 004e 00C0      		rjmp .L151
  42:../../tmk_core/common/action_tapping.c ****         }
 1056               		.loc 1 42 0
 1057 0050 4F81      		ldd r20,Y+7
 1058 0052 5885      		ldd r21,Y+8
 1059 0054 6985      		ldd r22,Y+9
 1060 0056 7A85      		ldd r23,Y+10
 1061 0058 8B85      		ldd r24,Y+11
 1062 005a 9C85      		ldd r25,Y+12
 1063 005c 0E94 0000 		call debug_record
 1064               	.LVL75:
 1065 0060 00C0      		rjmp .L151
 1066               	.L147:
 1067 0062 86E0      		ldi r24,lo8(6)
 1068 0064 FE01      		movw r30,r28
 1069 0066 3796      		adiw r30,7
 1070 0068 DE01      		movw r26,r28
 1071 006a 1196      		adiw r26,1
 1072               		0:
 1073 006c 0190      		ld r0,Z+
 1074 006e 0D92      		st X+,r0
 1075 0070 8A95      		dec r24
 1076 0072 01F4      		brne 0b
 1077 0074 FF81      		ldd r31,Y+7
 1078               	.LVL76:
 1079 0076 E885      		ldd r30,Y+8
 1080               	.LVL77:
 1081 0078 6A85      		ldd r22,Y+10
 1082 007a 7B85      		ldd r23,Y+11
 1083               	.LVL78:
 1084               	.LBB42:
 1085               	.LBB43:
 1086               	.LBB44:
 1087               	.LBB45:
  49:../../tmk_core/common/keyboard.h **** static inline bool IS_PRESSED(keyevent_t event) { return (!IS_NOEVENT(event) && event.pressed); }
 1088               		.loc 2 49 0
 1089 007c 6115      		cp r22,__zero_reg__
 1090 007e 7105      		cpc r23,__zero_reg__
 1091 0080 01F0      		breq .L162
 1092 0082 EF3F      		cpi r30,lo8(-1)
 1093 0084 01F4      		brne .L163
 1094 0086 81E0      		ldi r24,lo8(1)
 1095 0088 FF3F      		cpi r31,lo8(-1)
 1096 008a 01F4      		brne .L163
 1097 008c 00C0      		rjmp .L152
 1098               	.L162:
 1099 008e 81E0      		ldi r24,lo8(1)
 1100 0090 00C0      		rjmp .L152
 1101               	.L163:
 1102 0092 80E0      		ldi r24,0
 1103               	.L152:
 1104               	.LBE45:
 1105               	.LBE44:
 294:../../tmk_core/common/action_tapping.c ****         return true;
 1106               		.loc 1 294 0
 1107 0094 80FD      		sbrc r24,0
 1108 0096 00C0      		rjmp .L151
 298:../../tmk_core/common/action_tapping.c ****         debug("waiting_buffer_enq: Over flow.\n");
 1109               		.loc 1 298 0
 1110 0098 2091 0000 		lds r18,waiting_buffer_head
 1111 009c 30E0      		ldi r19,0
 1112 009e C901      		movw r24,r18
 1113 00a0 0196      		adiw r24,1
 1114 00a2 8770      		andi r24,7
 1115 00a4 9927      		clr r25
 1116 00a6 4091 0000 		lds r20,waiting_buffer_tail
 1117 00aa 50E0      		ldi r21,0
 1118 00ac 8417      		cp r24,r20
 1119 00ae 9507      		cpc r25,r21
 1120 00b0 01F0      		breq .L154
 303:../../tmk_core/common/action_tapping.c ****     waiting_buffer_head = (waiting_buffer_head + 1) % WAITING_BUFFER_SIZE;
 1121               		.loc 1 303 0
 1122 00b2 F983      		std Y+1,r31
 1123 00b4 EA83      		std Y+2,r30
 1124 00b6 7D83      		std Y+5,r23
 1125 00b8 6C83      		std Y+4,r22
 1126 00ba 96E0      		ldi r25,lo8(6)
 1127 00bc 929F      		mul r25,r18
 1128 00be D001      		movw r26,r0
 1129 00c0 939F      		mul r25,r19
 1130 00c2 B00D      		add r27,r0
 1131 00c4 1124      		clr __zero_reg__
 1132 00c6 A050      		subi r26,lo8(-(waiting_buffer))
 1133 00c8 B040      		sbci r27,hi8(-(waiting_buffer))
 1134 00ca FE01      		movw r30,r28
 1135               	.LVL79:
 1136 00cc 3196      		adiw r30,1
 1137               		0:
 1138 00ce 0190      		ld r0,Z+
 1139 00d0 0D92      		st X+,r0
 1140 00d2 9A95      		dec r25
 1141 00d4 01F4      		brne 0b
 304:../../tmk_core/common/action_tapping.c **** 
 1142               		.loc 1 304 0
 1143 00d6 8093 0000 		sts waiting_buffer_head,r24
 306:../../tmk_core/common/action_tapping.c ****     return true;
 1144               		.loc 1 306 0
 1145 00da 0E94 0000 		call debug_waiting_buffer
 1146               	.LVL80:
 1147               	.L151:
 1148               	.LBE43:
 1149               	.LBE42:
  59:../../tmk_core/common/action_tapping.c ****             debug("processed: waiting_buffer["); debug_dec(waiting_buffer_tail); debug("] = ");
 1150               		.loc 1 59 0 discriminator 1
 1151 00de 16E0      		ldi r17,lo8(6)
 1152               	.L155:
  58:../../tmk_core/common/action_tapping.c ****         if (process_tapping(&waiting_buffer[waiting_buffer_tail])) {
 1153               		.loc 1 58 0 discriminator 1
 1154 00e0 8091 0000 		lds r24,waiting_buffer_tail
 1155 00e4 9091 0000 		lds r25,waiting_buffer_head
 1156 00e8 8917      		cp r24,r25
 1157 00ea 01F0      		breq .L146
  59:../../tmk_core/common/action_tapping.c ****             debug("processed: waiting_buffer["); debug_dec(waiting_buffer_tail); debug("] = ");
 1158               		.loc 1 59 0
 1159 00ec 189F      		mul r17,r24
 1160 00ee C001      		movw r24,r0
 1161 00f0 1124      		clr __zero_reg__
 1162 00f2 8050      		subi r24,lo8(-(waiting_buffer))
 1163 00f4 9040      		sbci r25,hi8(-(waiting_buffer))
 1164 00f6 0E94 0000 		call process_tapping
 1165               	.LVL81:
 1166 00fa 8823      		tst r24
 1167 00fc 01F0      		breq .L146
  61:../../tmk_core/common/action_tapping.c ****         } else {
 1168               		.loc 1 61 0
 1169 00fe E091 0000 		lds r30,waiting_buffer_tail
 1170 0102 1E9F      		mul r17,r30
 1171 0104 F001      		movw r30,r0
 1172 0106 1124      		clr __zero_reg__
 1173 0108 E050      		subi r30,lo8(-(waiting_buffer))
 1174 010a F040      		sbci r31,hi8(-(waiting_buffer))
 1175 010c 4081      		ld r20,Z
 1176 010e 5181      		ldd r21,Z+1
 1177 0110 6281      		ldd r22,Z+2
 1178 0112 7381      		ldd r23,Z+3
 1179 0114 8481      		ldd r24,Z+4
 1180 0116 9581      		ldd r25,Z+5
 1181 0118 0E94 0000 		call debug_record
 1182               	.LVL82:
  58:../../tmk_core/common/action_tapping.c ****         if (process_tapping(&waiting_buffer[waiting_buffer_tail])) {
 1183               		.loc 1 58 0
 1184 011c 8091 0000 		lds r24,waiting_buffer_tail
 1185 0120 90E0      		ldi r25,0
 1186 0122 0196      		adiw r24,1
 1187 0124 8770      		andi r24,7
 1188 0126 9927      		clr r25
 1189 0128 8093 0000 		sts waiting_buffer_tail,r24
 1190 012c 00C0      		rjmp .L155
 1191               	.LVL83:
 1192               	.L154:
  48:../../tmk_core/common/action_tapping.c ****             waiting_buffer_clear();
 1193               		.loc 1 48 0
 1194 012e 0E94 0000 		call clear_keyboard
 1195               	.LVL84:
 1196               	.LBB46:
 1197               	.LBB47:
 312:../../tmk_core/common/action_tapping.c ****     waiting_buffer_tail = 0;
 1198               		.loc 1 312 0
 1199 0132 1092 0000 		sts waiting_buffer_head,__zero_reg__
 313:../../tmk_core/common/action_tapping.c **** }
 1200               		.loc 1 313 0
 1201 0136 1092 0000 		sts waiting_buffer_tail,__zero_reg__
 1202               	.LBE47:
 1203               	.LBE46:
  50:../../tmk_core/common/action_tapping.c ****         }
 1204               		.loc 1 50 0
 1205 013a E0E0      		ldi r30,lo8(tapping_key)
 1206 013c F0E0      		ldi r31,hi8(tapping_key)
 1207 013e 86E0      		ldi r24,lo8(6)
 1208 0140 DF01      		movw r26,r30
 1209               		0:
 1210 0142 1D92      		st X+,__zero_reg__
 1211 0144 8A95      		dec r24
 1212 0146 01F4      		brne 0b
 1213               	.L146:
 1214               	/* epilogue start */
  69:../../tmk_core/common/action_tapping.c **** 
 1215               		.loc 1 69 0
 1216 0148 2C96      		adiw r28,12
 1217 014a 0FB6      		in __tmp_reg__,__SREG__
 1218 014c F894      		cli
 1219 014e DEBF      		out __SP_H__,r29
 1220 0150 0FBE      		out __SREG__,__tmp_reg__
 1221 0152 CDBF      		out __SP_L__,r28
 1222 0154 DF91      		pop r29
 1223 0156 CF91      		pop r28
 1224 0158 1F91      		pop r17
 1225 015a 0895      		ret
 1226               		.cfi_endproc
 1227               	.LFE4:
 1229               		.section	.bss.waiting_buffer_tail,"aw",@nobits
 1232               	waiting_buffer_tail:
 1233 0000 00        		.zero	1
 1234               		.section	.bss.waiting_buffer_head,"aw",@nobits
 1237               	waiting_buffer_head:
 1238 0000 00        		.zero	1
 1239               		.section	.bss.waiting_buffer,"aw",@nobits
 1242               	waiting_buffer:
 1243 0000 0000 0000 		.zero	48
 1243      0000 0000 
 1243      0000 0000 
 1243      0000 0000 
 1243      0000 0000 
 1244               		.section	.bss.tapping_key,"aw",@nobits
 1247               	tapping_key:
 1248 0000 0000 0000 		.zero	6
 1248      0000 
 1249               		.text
 1250               	.Letext0:
 1251               		.file 3 "/usr/lib/avr/include/stdint.h"
 1252               		.file 4 "../../tmk_core/common/keycode.h"
 1253               		.file 5 "../../tmk_core/common/action_code.h"
 1254               		.file 6 "../../tmk_core/common/action.h"
 1255               		.file 7 "../../tmk_core/common/action_layer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_tapping.c
     /tmp/ccORIaBV.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccORIaBV.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccORIaBV.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccORIaBV.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccORIaBV.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccORIaBV.s:12     .text.debug_waiting_buffer:0000000000000000 debug_waiting_buffer
     /tmp/ccORIaBV.s:1232   .bss.waiting_buffer_tail:0000000000000000 waiting_buffer_tail
     /tmp/ccORIaBV.s:1237   .bss.waiting_buffer_head:0000000000000000 waiting_buffer_head
     /tmp/ccORIaBV.s:1242   .bss.waiting_buffer:0000000000000000 waiting_buffer
     /tmp/ccORIaBV.s:82     .text.debug_tapping_key:0000000000000000 debug_tapping_key
     /tmp/ccORIaBV.s:1247   .bss.tapping_key:0000000000000000 tapping_key
     /tmp/ccORIaBV.s:104    .text.waiting_buffer_scan_tap:0000000000000000 waiting_buffer_scan_tap
     /tmp/ccORIaBV.s:261    .text.process_tapping:0000000000000000 process_tapping
     /tmp/ccORIaBV.s:985    .text.action_tapping_process:0000000000000000 action_tapping_process

UNDEFINED SYMBOLS
debug_record
process_action
debug_event
is_tap_key
layer_switch_get_action
clear_keyboard
__do_clear_bss
